// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RequestHub.Server.Data;

#nullable disable

namespace RequestHub.Server.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("RequestHub.Shared.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("DepartmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentName = "Software Engineering"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentName = "Cloud Architect"
                        });
                });

            modelBuilder.Entity("RequestHub.Shared.SiteLocation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SiteLocations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Germany"
                        },
                        new
                        {
                            Id = 2,
                            Name = "United States"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Switzerland"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Romania"
                        });
                });

            modelBuilder.Entity("RequestHub.Shared.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsValid")
                        .HasColumnType("bit");

                    b.Property<int>("SiteLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UploadFileId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("SiteLocationId");

                    b.HasIndex("UploadFileId");

                    b.HasIndex("UserId");

                    b.ToTable("Tickets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Comment = "enter comment here...",
                            DepartmentId = 1,
                            Description = "Enter description here",
                            EquipmentName = "enter equipment name here",
                            IsValid = true,
                            SiteLocationId = 1,
                            Timestamp = new DateTime(2024, 10, 1, 16, 17, 30, 375, DateTimeKind.Local).AddTicks(513),
                            UserId = 1
                        });
                });

            modelBuilder.Entity("RequestHub.Shared.UploadFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ContentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Size")
                        .HasColumnType("bigint");

                    b.Property<string>("TrustedFileName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UploadDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("UploadFiles");
                });

            modelBuilder.Entity("RequestHub.Shared.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("RequestorName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ResetTokenExpires")
                        .HasColumnType("datetime2");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VerificationToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("VerifiedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DateCreated = new DateTime(2024, 10, 1, 16, 17, 30, 375, DateTimeKind.Local).AddTicks(1716),
                            Email = "testuser@user.com",
                            PasswordHash = new byte[] { 236, 193, 30, 173, 113, 173, 73, 152, 178, 214, 2, 10, 79, 4, 194, 62, 83, 22, 157, 228, 240, 238, 117, 221, 140, 2, 205, 245, 125, 252, 137, 134, 243, 101, 3, 189, 201, 187, 228, 254, 181, 192, 20, 90, 244, 193, 68, 69, 97, 203, 170, 239, 211, 221, 5, 35, 82, 15, 89, 151, 231, 206, 173, 147 },
                            PasswordSalt = new byte[] { 71, 139, 167, 5, 180, 57, 49, 154, 183, 47, 195, 69, 156, 113, 199, 24, 246, 159, 21, 149, 163, 7, 58, 93, 211, 45, 113, 18, 86, 58, 166, 102, 149, 104, 1, 69, 86, 75, 173, 182, 12, 134, 196, 198, 176, 177, 21, 6, 81, 114, 22, 75, 186, 83, 235, 126, 15, 125, 89, 9, 60, 208, 76, 47, 71, 166, 81, 190, 169, 152, 40, 220, 76, 4, 112, 87, 6, 19, 102, 191, 218, 189, 176, 70, 76, 160, 63, 253, 238, 180, 192, 251, 15, 46, 90, 11, 150, 193, 246, 198, 158, 145, 59, 59, 152, 221, 143, 148, 74, 68, 2, 31, 91, 123, 192, 86, 197, 157, 53, 227, 17, 104, 216, 141, 32, 220, 236, 219 },
                            RequestorName = "Test User",
                            Role = "Admin"
                        });
                });

            modelBuilder.Entity("RequestHub.Shared.Ticket", b =>
                {
                    b.HasOne("RequestHub.Shared.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RequestHub.Shared.SiteLocation", "SiteLocation")
                        .WithMany()
                        .HasForeignKey("SiteLocationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RequestHub.Shared.UploadFile", "UploadFile")
                        .WithMany()
                        .HasForeignKey("UploadFileId");

                    b.HasOne("RequestHub.Shared.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("SiteLocation");

                    b.Navigation("UploadFile");

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
